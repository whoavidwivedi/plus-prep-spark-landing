"use client";

import { motion } from "framer-motion";
import { ThreeDMarquee } from "@/components/ui/3d-marquee";
import { cn } from "@/lib/utils";

export default function ThreeDMarqueeDemo() {
  const dsaTopics = [
    { title: "Arrays & Strings", description: "Two Pointers, Sliding Window", difficulty: "Easy" },
    { title: "Linked Lists", description: "Fast & Slow Pointers", difficulty: "Easy" },
    { title: "Trees & Graphs", description: "DFS, BFS, Traversals", difficulty: "Medium" },
    { title: "Dynamic Programming", description: "Memoization, Tabulation", difficulty: "Hard" },
    { title: "Binary Search", description: "Divide & Conquer", difficulty: "Medium" },
    { title: "Stacks & Queues", description: "LIFO, FIFO Operations", difficulty: "Easy" },
    { title: "Heaps & Priority Queues", description: "Min/Max Heaps", difficulty: "Medium" },
    { title: "Hash Tables", description: "Key-Value Mapping", difficulty: "Easy" },
    { title: "Greedy Algorithms", description: "Optimal Choices", difficulty: "Medium" },
    { title: "Backtracking", description: "State Space Search", difficulty: "Hard" },
    { title: "Bit Manipulation", description: "Bitwise Operations", difficulty: "Medium" },
    { title: "System Design", description: "Scalable Architecture", difficulty: "Hard" },
    { title: "Sorting Algorithms", description: "Quick, Merge, Heap Sort", difficulty: "Medium" },
    { title: "Graph Algorithms", description: "Dijkstra, Bellman-Ford", difficulty: "Hard" },
    { title: "String Algorithms", description: "KMP, Rabin-Karp", difficulty: "Medium" },
    { title: "Advanced DP", description: "State Compression, Digit DP", difficulty: "Hard" },
    { title: "Trie Data Structure", description: "Prefix Trees, Autocomplete", difficulty: "Medium" },
    { title: "Segment Trees", description: "Range Queries, Updates", difficulty: "Hard" },
    { title: "Union Find", description: "Disjoint Sets, Connected Components", difficulty: "Medium" },
    { title: "Sliding Window", description: "Fixed/Variable Size Windows", difficulty: "Medium" },
    { title: "Two Pointers", description: "Array Traversal Techniques", difficulty: "Easy" },
    { title: "Monotonic Stack", description: "Increasing/Decreasing Order", difficulty: "Medium" },
    { title: "Topological Sort", description: "DAG Ordering, Dependencies", difficulty: "Medium" },
    { title: "Floyd's Algorithm", description: "Cycle Detection, Tortoise & Hare", difficulty: "Medium" },
    // More subtopics and variations for density:
    { title: "Palindrome Substrings", description: "Expand Around Center", difficulty: "Medium" },
    { title: "LRU Cache", description: "Design & Implementation", difficulty: "Hard" },
    { title: "Binary Tree Traversal", description: "Inorder, Preorder, Postorder", difficulty: "Easy" },
    { title: "Cycle Detection", description: "Floyd's, DFS", difficulty: "Medium" },
    { title: "Minimum Spanning Tree", description: "Kruskal, Prim", difficulty: "Hard" },
    { title: "Shortest Path", description: "Dijkstra, Bellman-Ford", difficulty: "Medium" },
    { title: "Matrix Problems", description: "Spiral, Search, DP", difficulty: "Medium" },
    { title: "Number Theory", description: "GCD, Primes, Sieve", difficulty: "Medium" },
    { title: "Bitmask DP", description: "State Compression", difficulty: "Hard" },
    { title: "Knapsack", description: "0/1, Unbounded", difficulty: "Medium" },
    { title: "Disjoint Set Union", description: "Union by Rank, Path Compression", difficulty: "Medium" },
    { title: "Fenwick Tree", description: "Binary Indexed Tree", difficulty: "Hard" },
    { title: "Suffix Array", description: "String Processing", difficulty: "Hard" },
    { title: "Kth Largest Element", description: "Quickselect, Heap", difficulty: "Medium" },
    { title: "Flood Fill", description: "DFS, BFS", difficulty: "Easy" },
    { title: "Top K Frequent", description: "Heap, Bucket Sort", difficulty: "Medium" },
    { title: "LRU/LFU Cache", description: "Design Patterns", difficulty: "Hard" },
    { title: "Median of Data Stream", description: "Heaps, Two Pointers", difficulty: "Hard" },
    { title: "Word Ladder", description: "BFS, Set", difficulty: "Hard" },
    { title: "Course Schedule", description: "Topological Sort", difficulty: "Medium" },
    { title: "Rotting Oranges", description: "BFS, Matrix", difficulty: "Medium" },
    { title: "Alien Dictionary", description: "Graph, Topological Sort", difficulty: "Hard" },
    { title: "Meeting Rooms", description: "Intervals, Sorting", difficulty: "Easy" },
    { title: "Merge Intervals", description: "Sorting, Greedy", difficulty: "Medium" },
    { title: "Longest Substring", description: "HashMap, Sliding Window", difficulty: "Medium" },
    { title: "Subsets", description: "Backtracking, Bitmask", difficulty: "Medium" },
    { title: "Permutations", description: "Backtracking", difficulty: "Medium" },
    { title: "Combination Sum", description: "Backtracking, DFS", difficulty: "Medium" },
    { title: "Word Search", description: "Backtracking, Matrix", difficulty: "Medium" },
    { title: "N-Queens", description: "Backtracking, DFS", difficulty: "Hard" },
    { title: "LRU Cache (Design)", description: "HashMap, Doubly Linked List", difficulty: "Hard" },
    { title: "Find Peak Element", description: "Binary Search", difficulty: "Medium" },
    { title: "Spiral Matrix", description: "Matrix Traversal", difficulty: "Medium" },
    { title: "Jump Game", description: "Greedy, DP", difficulty: "Medium" },
    { title: "Gas Station", description: "Greedy, Array", difficulty: "Medium" },
    { title: "Insert Interval", description: "Intervals, Sorting", difficulty: "Hard" },
    { title: "Minimum Window Substring", description: "Sliding Window, HashMap", difficulty: "Hard" },
    { title: "Product of Array Except Self", description: "Prefix, Suffix", difficulty: "Medium" },
    { title: "Find Median from Data Stream", description: "Heaps, Two Pointers", difficulty: "Hard" },
    { title: "Reverse Linked List", description: "Pointers, Iteration", difficulty: "Easy" },
    { title: "Clone Graph", description: "DFS, BFS", difficulty: "Medium" },
    { title: "Course Schedule II", description: "Topological Sort", difficulty: "Medium" },
    { title: "Number of Islands", description: "DFS, BFS, Matrix", difficulty: "Medium" },
    { title: "Valid Parentheses", description: "Stack, String", difficulty: "Easy" },
    { title: "Evaluate Reverse Polish Notation", description: "Stack, Math", difficulty: "Medium" },
    { title: "Largest Rectangle in Histogram", description: "Stack, Monotonic Stack", difficulty: "Hard" },
    { title: "Maximal Square", description: "DP, Matrix", difficulty: "Medium" },
    { title: "Word Break", description: "DP, String", difficulty: "Medium" },
    { title: "Find All Anagrams", description: "Sliding Window, HashMap", difficulty: "Medium" },
    { title: "Minimum Path Sum", description: "DP, Matrix", difficulty: "Medium" },
    { title: "Unique Paths", description: "DP, Matrix", difficulty: "Medium" },
    { title: "Coin Change", description: "DP, Greedy", difficulty: "Medium" },
    { title: "House Robber", description: "DP, Array", difficulty: "Medium" },
    { title: "Decode Ways", description: "DP, String", difficulty: "Medium" },
    { title: "Longest Increasing Subsequence", description: "DP, Binary Search", difficulty: "Medium" },
    { title: "Edit Distance", description: "DP, String", difficulty: "Hard" },
    { title: "Regular Expression Matching", description: "DP, String", difficulty: "Hard" },
    { title: "Wildcard Matching", description: "DP, String", difficulty: "Hard" },
    { title: "Merge k Sorted Lists", description: "Heap, Linked List", difficulty: "Hard" },
    { title: "LRU Cache (Design)", description: "HashMap, Doubly Linked List", difficulty: "Hard" },
    { title: "Find Minimum in Rotated Sorted Array", description: "Binary Search", difficulty: "Medium" },
    { title: "Search in Rotated Sorted Array", description: "Binary Search", difficulty: "Medium" },
    { title: "Median of Two Sorted Arrays", description: "Binary Search, Array", difficulty: "Hard" },
    { title: "Pow(x, n)", description: "Recursion, Math", difficulty: "Medium" },
    { title: "Spiral Matrix II", description: "Matrix, Simulation", difficulty: "Medium" },
    { title: "Rotate Image", description: "Matrix, Simulation", difficulty: "Medium" },
    { title: "Set Matrix Zeroes", description: "Matrix, Simulation", difficulty: "Medium" },
    { title: "Game of Life", description: "Matrix, Simulation", difficulty: "Medium" },
    { title: "First Missing Positive", description: "Array, Hashing", difficulty: "Hard" },
    { title: "Trapping Rain Water", description: "Two Pointers, Stack", difficulty: "Hard" },
    { title: "Jump Game II", description: "Greedy, DP", difficulty: "Medium" },
    { title: "Minimum Size Subarray Sum", description: "Sliding Window, Array", difficulty: "Medium" },
    { title: "Find Duplicate Number", description: "Floyd's, Array", difficulty: "Medium" },
    { title: "Find All Numbers Disappeared", description: "Array, Hashing", difficulty: "Easy" },
    { title: "Find the Celebrity", description: "Graph, Matrix", difficulty: "Medium" },
    { title: "Find the Town Judge", description: "Graph, Array", difficulty: "Easy" },
    { title: "Course Schedule III", description: "Greedy, Heap", difficulty: "Hard" },
    { title: "Minimum Height Trees", description: "Graph, BFS", difficulty: "Medium" },
    { title: "Redundant Connection", description: "Union Find, Graph", difficulty: "Medium" },
    { title: "Critical Connections", description: "Tarjan's Algorithm", difficulty: "Hard" },
    { title: "Network Delay Time", description: "Graph, Dijkstra", difficulty: "Medium" },
    { title: "Clone Binary Tree", description: "DFS, Recursion", difficulty: "Easy" },
    { title: "Lowest Common Ancestor", description: "Tree, DFS", difficulty: "Medium" },
    { title: "Binary Tree Maximum Path Sum", description: "Tree, DFS", difficulty: "Hard" },
    { title: "Validate Binary Search Tree", description: "Tree, DFS", difficulty: "Medium" },
    { title: "Symmetric Tree", description: "Tree, Recursion", difficulty: "Easy" },
    { title: "Invert Binary Tree", description: "Tree, Recursion", difficulty: "Easy" },
    { title: "Populating Next Right Pointers", description: "Tree, BFS", difficulty: "Medium" },
    { title: "Flatten Binary Tree", description: "Tree, DFS", difficulty: "Medium" },
    { title: "Construct Binary Tree", description: "Tree, DFS", difficulty: "Medium" },
    { title: "Binary Tree Right Side View", description: "Tree, BFS", difficulty: "Medium" },
    { title: "Sum Root to Leaf Numbers", description: "Tree, DFS", difficulty: "Medium" },
    { title: "Path Sum", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Balanced Binary Tree", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Same Tree", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Subtree of Another Tree", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Maximum Depth of Binary Tree", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Diameter of Binary Tree", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Count Complete Tree Nodes", description: "Tree, DFS", difficulty: "Medium" },
    { title: "Convert Sorted Array to BST", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Minimum Depth of Binary Tree", description: "Tree, BFS", difficulty: "Easy" },
    { title: "Binary Tree Zigzag Level Order", description: "Tree, BFS", difficulty: "Medium" },
    { title: "Binary Tree Level Order Traversal", description: "Tree, BFS", difficulty: "Easy" },
    { title: "Binary Tree Inorder Traversal", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Binary Tree Preorder Traversal", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Binary Tree Postorder Traversal", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Sum of Left Leaves", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Sum of Right Leaves", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Cousins in Binary Tree", description: "Tree, BFS", difficulty: "Easy" },
    { title: "Average of Levels in Binary Tree", description: "Tree, BFS", difficulty: "Easy" },
    { title: "Leaf-Similar Trees", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Longest Univalue Path", description: "Tree, DFS", difficulty: "Medium" },
    { title: "Sum of Left Leaves", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Sum of Right Leaves", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Cousins in Binary Tree", description: "Tree, BFS", difficulty: "Easy" },
    { title: "Average of Levels in Binary Tree", description: "Tree, BFS", difficulty: "Easy" },
    { title: "Leaf-Similar Trees", description: "Tree, DFS", difficulty: "Easy" },
    { title: "Longest Univalue Path", description: "Tree, DFS", difficulty: "Medium" }
  ];

  return (
    <section className="py-20 px-4 bg-gradient-to-br from-background via-muted/20 to-background">
      <div className="max-w-7xl mx-auto">
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            Master <span className="gradient-text">DSA Topics</span>
          </h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            Explore our comprehensive collection of Data Structures & Algorithms 
            with interactive 3D visualization
          </p>
        </div>
        
        <div className="mx-auto max-w-7xl rounded-3xl bg-gradient-to-br from-card/50 to-card/30 p-2 ring-1 ring-border/50 backdrop-blur-sm">
          <ThreeDMarquee topics={dsaTopics} />
        </div>
      </div>
    </section>
  );
} 